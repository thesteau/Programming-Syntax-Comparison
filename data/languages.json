{
  "C" : {
    "For Loops" : [ "#/* For loops */", "char totalArray[10] = \"Hello\";", "for(int eachIndex = 0; eachIndex < totalArray; eachIndex++) {\n<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%c\",totalArray[eachIndex]);\n<br>}", "#If all positional arguments are empty, the loop will run indefinitely. Do this at your own risk.", "#Note: Remember to define the length and the objects for array beforehand.", "#See more on printf here", "#lhttps://man7.org/linux/man-pages/man3/printf.3.html", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Functions" : [ "#/* Functions - in C, you have to declare the type before the function name. */", "int someFunc(){<br>&nbsp;&nbsp;&nbsp;&nbsp;return 1; <br>}", "## /* void is for a function that does not return any thing. Otherwise, please refer to the return types here:*/", "void someFunc(){<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"hello\");<br>}", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "# /* For C, you need to declare a variable type followed by the variable name. */", "#/* String */", "char someString[10] = \"string\";", "#/* Character (A single character string) */", "char someChar = \"c\";", "#/* Boolean */", "int someBool = 1;", "#/* Integer */", "int someInt = 1;", "#/* Floats */", "float someFloat = 1.0;", "# Reference used:", "#lhttps://www.w3schools.com/c/c_variables.php" ],
    "While Loops" : [ "#/* While loops */", "int counter = 0;", "while(counter < 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"hello\");<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}", "#/* Do While Loop - You execute the code at least once. */", "int counter = 0;", "do{<br>\n&nbsp;&nbsp;&nbsp;&nbsp;printf(\"hello\");<br>\n&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>\n} while(counter < 10);", "#See more on printf here", "#lhttps://man7.org/linux/man-pages/man3/printf.3.html", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "#/* Null pointer /*", "int *pointerInteger = NULL;", "#See more on null pointer here:", "#lhttps://www.geeksforgeeks.org/few-bytes-on-null-pointer-in-c/", "#<br>And the wiki summary here:", "#lhttps://en.wikipedia.org/wiki/Null_pointer", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "C++" : {
    "For Loops" : [ "#/* For loops */", "for(int eachIndex = 0; eachIndex < totalArray; eachIndex++) {\n<br>&nbsp;&nbsp;&nbsp;&nbsp;cout << totalArray[eachIndex] << endl;\n<br>}", "#If all positional arguments are empty, the loop will run indefinitely. Do this at your own risk.", "#Note: Remember to define the length and the objects inside the array beforehand.", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Functions" : [ "#/* Functions - in C++, you have to declare the type before the function name. */", "int someFunc(){<br>&nbsp;&nbsp;&nbsp;&nbsp;return 1; <br>}", "## /* void is for a function that does not return any thing. Otherwise, please refer to the return types here:*/", "void someFunc(){<br>&nbsp;&nbsp;&nbsp;&nbsp;cout << \"hello\" << endl;<br>}", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "# /* For C++, you need to declare a variable type followed by the variable name. */", "#/* String */", "string someString = \"string\";", "#/* Character (A single character string) */", "char someChar = \"c\";", "#/* Boolean */", "bool someBool = true;", "#/* Integer */", "int someInt = 1;", "#/* Floats */", "float someFloat = 1.0;", "# Reference used: ", "#lhttps://www.w3schools.com/cpp/cpp_variables.asp" ],
    "While Loops" : [ "#/* While loops */", "int counter = 0;", "while(counter < 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;cout << \"hello\" << endl;<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "#/* Null pointer /*", "int *pointerInteger = NULL;", "#See more on null pointer here:", "#lhttps://www.tutorialspoint.com/cplusplus/cpp_null_pointers.htm", "#<br>And the wiki summary here:", "#lhttps://en.wikipedia.org/wiki/Null_pointer", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "Cs" : {
    "For Loops" : [ "#//For loops", "for(int eachIndex = 0; eachIndex < totalArray; eachIndex++) {\n<br>&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(totalArray[eachIndex]);\n<br>}", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Functions" : [ "#// Functions", "#// Use the return type when creating a function", "public static void SomeFunction() {<br>&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(\"hello\")<br>};", "#See more on functions here:", "#lhttps://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/local-functions", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "#// For C#, you need to declare a variable type followed by the variable name. ", "#// String", "string someString = \"string\";", "#// 'Character (A single character string)", "char someChar = \"c\";", "#// Boolean ", "bool someBool = true;", "#// Integer ", "int someInt = 1;", "#// Floats", "float someFloat = 1.0;", "# Reference used: ", "#lhttps://www.w3schools.com/cs/cs_variables.php" ],
    "While Loops" : [ "#// While loop", "int counter = 0;", "while (counter < 10){<br>&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(counter);<br>counter++;<br>}", "#// Do while loop (The body executes at least once)", "int counter = 0;", "do{<br>&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(counter);<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}while (counter < 10);", "#See more details on looping here:", "#lhttps://www.w3schools.com/cs/cs_while_loop.php", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "#// Null", "string nullable = null;", "#See more on null here:", "#lhttps://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/null", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "Dart" : {
    "For Loops" : [ "#// For loops", "for(var eachIndex = 0; eachIndex < totalArray; eachIndex++) {\n<br>&nbsp;&nbsp;&nbsp;&nbsp;print(totalArray[eachIndex]);\n<br>}", "#// For In loop - Can be used with an Object or an Array. The someIndex becomes an integer if Array, else the property name.", "for (var someIndex in totalArray){<br>&nbsp;&nbsp;&nbsp;&nbsp;print(totalArray[someIndex]);<br>}", "#See more here:", "#lhttps://dart.dev/guides/language/language-tour#for-loops", "#// For Each loop - allows a function to execute per element", "someArray.forEach((item) => print(item));", "#See more on For Each here:", "#lhttps://api.dart.dev/stable/2.16.1/dart-core/Iterable/forEach.html", "NaN", "NaN", "NaN" ],
    "Functions" : [ "#// Functions", "#// Use the return type when creating a function", "void SomeFunction() {<br>&nbsp;&nbsp;&nbsp;&nbsp;print(\"hello\");<br>}", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "#// String", "final someString = \"string\";", "#// Character", "final someChar = \"c\";", "#// Boolean", "final someBool = true;", "#// Integer", "final someInt = 1;", "#// Float", "final someFloat = 1.0;", "#// var is mutable. Use final and const for static variables. (const is implicitly final)", "#See more here", "#lhttps://dart.dev/guides/language/language-tour" ],
    "While Loops" : [ "#// While loops", "int counter = 0;", "while(counter < 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;print(\"hello\");<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}", "#// Do While loops", null, "int counter = 0;", "do{<br>\n&nbsp;&nbsp;&nbsp;&nbsp;printf(\"hello\");<br>\n&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>\n} while(counter < 10);", "# See more here:", "#lhttps://dart.dev/guides/language/language-tour#while-and-do-while", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "#// Null", "int? someInt = null;", "#// Verifying null", "if (someInt == null) {<br>print(\"Null!\"); <br>}", "#See more here", "#lhttps://dart.dev/null-safety", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "Java" : {
    "For Loops" : [ "#// For loops", "for(let eachIndex = 0; eachIndex < totalArray; eachIndex++) {\n<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(totalArray[eachIndex]);\n<br>}", "#// For Each loop - allows a function to execute per element", "someArray.forEach(function(item) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(item);<br>});", "#See more on For Each here:", "#lhttps://docs.oracle.com/javase/8/docs/technotes/guides/language/foreach.html", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Functions" : [ "#// Functions", "#// Use the return type when creating a function", "public static void SomeFunction() {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"hello\");<br>};", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "#// String", "String someString = \"string\";", "#// 'Character (A single character string)", "char someChar = \"c\";", "#// Boolean ", "boolean someBool = true;", "#// Integer ", "int someInt = 1;", "#// Floats", "float someFloat = 1.0;", "# Reference used: ", "#lhttps://www.w3schools.com/java/java_variables.asp" ],
    "While Loops" : [ "#// While loops", "int counter = 0;", "while(counter < 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"hello\");<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}", "#// Do while loops", "do{<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\"hello\");<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}while(counter < 10) ", "# See more here:", "#lhttps://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "#// Null - only works with strings and objects", "String someVariable = null;", "#// Verifying null", "if (someVariable == null) {<br>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(\"Null!\");<br>};", "# This video tutorial has good depth on this topic:", "#lhttps://www.youtube.com/watch?v=kot131zufIQ", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "Javascript" : {
    "For Loops" : [ "#// For loops", "for(let eachIndex = 0; eachIndex < totalArray; eachIndex++) {\n<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(totalArray[eachIndex]);\n<br>}", "#// For In loop - Can be used with an Object or an Array. The someIndex becomes an integer if Array, else the property name.", "for (let someIndex in totalArray){<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(totalArray[someIndex])<br>};", "#See more on For In here:", "#lhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in", "#// For Each loop - allows a function to execute per element", "someArray.forEach(function(item) {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(item);<br>});", "#See more on For Each here:", "#lhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#converting_a_for_loop_to_foreach", "NaN" ],
    "Functions" : [ "#// Functions", "function someFunction() {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\"hello\")<br>};", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "#// String", "const someString = \"string\";", "#// Character", "const someChar = \"c\";", "#// Boolean", "const someBool = true;", "#// Integer", "const someInt = 1;", "#// Float", "const someFloat = 1.0;", "#Notice how JavaScript uses camel case for its variable declarations without specifying its datatype?" ],
    "While Loops" : [ "#// While loops", "int counter = 0;", "while(counter < 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\"hello\");<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}", "#// Do while loops", "int counter = 0;", "do{<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\"hello\");<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++;<br>}while(counter < 10) ", "# See more here:", "#lhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/do...while", "NaN", "NaN", "NaN" ],
    "null" : [ "#// Null", "let someVariable = null;", "#// Verifying null", "if (someVariable === null) {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\"Null!\");<br>};", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "Kotlin" : {
    "For Loops" : [ "#// For loops", "for (someIndex in totalArray){<br>&nbsp;&nbsp;&nbsp;&nbsp;println(totalArray[someIndex])<br>};", "#See more here:", "#lhttps://kotlinlang.org/docs/control-flow.html#for-loops", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Functions" : [ "#// Functions: use the <code>fun</code> keyword.", "fun someFunction(){<br>&nbsp;&nbsp;&nbsp;&nbsp;return 1<br>}", "# See more here:", "#lhttps://kotlinlang.org/docs/functions.html", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "#// String", "val someString = \"string\"", "#// Character", "val someChar = \"c\"", "#// Boolean", "val someBool = true", "#// Integer", "val someInt = 1", "#// Float", "val someFloat = 1.0", "#See more here:", "#lhttps://www.w3schools.com/kotlin/kotlin_data_types.php" ],
    "While Loops" : [ "#// While loops", "int counter = 0", "while(counter < 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;println(\"hello\")<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++<br>}", "#// Do while loops", "do{<br>&nbsp;&nbsp;&nbsp;&nbsp;println(\"hello\")<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++<br>} while(counter < 10) ", "# See more here:", "#lhttps://kotlinlang.org/docs/control-flow.html#while-loops", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "#//Null", "val someNull: String? = null", "#See more here:", "#lhttps://kotlinlang.org/docs/null-safety.html#safe-calls", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "Python" : {
    "For Loops" : [ "## For Loop", "for each_index in range(10):", "&nbsp;&nbsp;&nbsp;&nbsp;print(each_index)", "NaN", "## Syntactic sugar: List comprehension", "aggregated_list = [each_index + 1 for each_index in range(100)]", "NaN", "#Check out more on list comprehensions here:", "#lhttps://docs.python.org/3/tutorial/datastructures.html#list-comprehensions", "NaN", "NaN" ],
    "Functions" : [ "## Functions: use the def keyword.", "def some_function():<br>&nbsp;&nbsp;&nbsp;&nbsp;return 1", "## Use the <code>pass</code> keyword to initiate an empty function to be later filled in.", "def some_function():<br>&nbsp;&nbsp;&nbsp;&nbsp;pass", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "## String ", "some_string = \"string\"", "## Character", "some_char = \"c\"", "## Boolean ", "some_bool = True", "## Integer", "some_int = 1", "## Float", "some_float = 1.0", "#Notice how Python uses snake case for its variable declarations without specifying its datatype?" ],
    "While Loops" : [ "## While Loops", "counter = 0", "while counter < 10:<br>&nbsp;&nbsp;&nbsp;&nbsp;print(counter)<br>&nbsp;&nbsp;&nbsp;&nbsp;counter +=  1", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "## Null - In python, this is a special keyword called <code>None</code>", "some_variable = None", "## Verify <code>None</code> with the <code>is</code> keyword", "if some_variable is None:<br>&nbsp;&nbsp;&nbsp;&nbsp;print(True)", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  },
  "Swift" : {
    "For Loops" : [ "#// For loops", "for (someIndex in totalArray){<br>&nbsp;&nbsp;&nbsp;&nbsp;print(totalArray[someIndex])<br>};", "#See more here:", "#lhttps://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Functions" : [ "#// Functions: use the <code>func</code> keyword.", "func someFunction(){<br>&nbsp;&nbsp;&nbsp;&nbsp;return 1<br>}", "# See more here:", "#lhttps://docs.swift.org/swift-book/LanguageGuide/Functions.html", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "Variables" : [ "#// String", "var someString = \"string\"", "#// Character", "var someChar = \"c\"", "#// Boolean", "var someBool = true", "#// Integer", "var someInt = 1", "#// Float", "var someFloat = 1.0", "#See more details here:", "#lhttps://docs.swift.org/swift-book/LanguageGuide/TheBasics.html" ],
    "While Loops" : [ "#// While loops", "int counter = 0", "while(counter < 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;print(\"hello\")<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++<br>}", "#// Do while loops - In swift, there is repeat while instead", "repeat{<br>&nbsp;&nbsp;&nbsp;&nbsp;print(\"hello\")<br>&nbsp;&nbsp;&nbsp;&nbsp;counter++<br>} while(counter < 10) ", "# See more here:", "#lhttps://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html", "NaN", "NaN", "NaN", "NaN", "NaN" ],
    "null" : [ "#//Null", "val someNull: String? = nil", "#// Verifying nil", "if someNull == nil {<br>&nbsp;&nbsp;&nbsp;&nbsp;print(\"Nil!\")<br>}", "#See more here:", "#lhttps://docs.swift.org/swift-book/LanguageGuide/TheBasics.html#nil", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN" ]
  }
}
